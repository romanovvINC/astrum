// <auto-generated />
using System;
using Astrum.CodeRev.Domain.Aggregates.Draft;
using Astrum.CodeRev.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Astrum.CodeRev.Persistence.Migrations
{
    [DbContext(typeof(CodeRevDbContext))]
    [Migration("20230713070138_RemoveNotification")]
    partial class RemoveNotification
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("CodeRev")
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.Interview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<string>("CreatedByUsername")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("InterviewDurationMs")
                        .HasColumnType("bigint");

                    b.Property<string>("InterviewText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Vacancy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Interviews", "CodeRev");
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.InterviewLanguage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid>("InterviewId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("ProgrammingLanguage")
                        .HasColumnType("integer");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InterviewId");

                    b.ToTable("InterviewLanguages", "CodeRev");
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.InterviewSolution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("AverageGrade")
                        .HasColumnType("integer");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("EndTimeMs")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("InterviewId")
                        .HasColumnType("uuid");

                    b.Property<int>("InterviewResult")
                        .HasColumnType("integer");

                    b.Property<Guid>("InvitedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSubmittedByCandidate")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSynchronous")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReviewerComment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<Guid>("ReviewerDraftId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("ReviewerDraftId1")
                        .HasColumnType("uuid");

                    b.Property<long>("StartTimeMs")
                        .HasColumnType("bigint");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TimeToCheckMs")
                        .HasColumnType("bigint");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InterviewId");

                    b.HasIndex("ReviewerDraftId1");

                    b.ToTable("InterviewSolutions", "CodeRev");
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.Invitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("ExpiredAt")
                        .HasColumnType("bigint");

                    b.Property<Guid>("InterviewId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsSynchronous")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("Role")
                        .HasColumnType("integer");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InterviewId");

                    b.ToTable("Invitations", "CodeRev");
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.ReviewerDraft", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Draft>("Draft")
                        .HasColumnType("jsonb");

                    b.Property<Guid>("InterviewSolutionId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ReviewerDrafts", "CodeRev");
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.TaskSolution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Grade")
                        .HasColumnType("integer");

                    b.Property<Guid>("InterviewSolutionId")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDone")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<int>("RunAttemptsLeft")
                        .HasColumnType("integer");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TestTaskId")
                        .HasColumnType("uuid");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InterviewSolutionId");

                    b.HasIndex("TestTaskId");

                    b.ToTable("TaskSolutions", "CodeRev");
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.TestTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset?>("DateDeleted")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTimeOffset>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ProgrammingLanguage")
                        .HasColumnType("integer");

                    b.Property<int>("RunAttempts")
                        .HasColumnType("integer");

                    b.Property<string>("StartCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TaskText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TestsCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Version")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Tasks", "CodeRev");
                });

            modelBuilder.Entity("Astrum.SharedLib.Persistence.Models.Audit.AuditHistory", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Changed")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("Kind")
                        .HasColumnType("integer");

                    b.Property<string>("RowId")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.Property<string>("Username")
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.ToTable("AuditHistory", "CodeRev");
                });

            modelBuilder.Entity("InterviewTestTask", b =>
                {
                    b.Property<Guid>("InterviewsId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("TasksId")
                        .HasColumnType("uuid");

                    b.HasKey("InterviewsId", "TasksId");

                    b.HasIndex("TasksId");

                    b.ToTable("InterviewTestTask", "CodeRev");
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.InterviewLanguage", b =>
                {
                    b.HasOne("Astrum.CodeRev.UserService.Domain.Aggregates.Interview", null)
                        .WithMany("ProgrammingLanguages")
                        .HasForeignKey("InterviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.InterviewSolution", b =>
                {
                    b.HasOne("Astrum.CodeRev.UserService.Domain.Aggregates.Interview", "Interview")
                        .WithMany("InterviewSolutions")
                        .HasForeignKey("InterviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrum.CodeRev.UserService.Domain.Aggregates.ReviewerDraft", "ReviewerDraft")
                        .WithMany()
                        .HasForeignKey("ReviewerDraftId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interview");

                    b.Navigation("ReviewerDraft");
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.Invitation", b =>
                {
                    b.HasOne("Astrum.CodeRev.UserService.Domain.Aggregates.Interview", "Interview")
                        .WithMany("Invitations")
                        .HasForeignKey("InterviewId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Interview");
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.TaskSolution", b =>
                {
                    b.HasOne("Astrum.CodeRev.UserService.Domain.Aggregates.InterviewSolution", "InterviewSolution")
                        .WithMany("TaskSolutions")
                        .HasForeignKey("InterviewSolutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrum.CodeRev.UserService.Domain.Aggregates.TestTask", "TestTask")
                        .WithMany("TaskSolutions")
                        .HasForeignKey("TestTaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InterviewSolution");

                    b.Navigation("TestTask");
                });

            modelBuilder.Entity("InterviewTestTask", b =>
                {
                    b.HasOne("Astrum.CodeRev.UserService.Domain.Aggregates.Interview", null)
                        .WithMany()
                        .HasForeignKey("InterviewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Astrum.CodeRev.UserService.Domain.Aggregates.TestTask", null)
                        .WithMany()
                        .HasForeignKey("TasksId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.Interview", b =>
                {
                    b.Navigation("InterviewSolutions");

                    b.Navigation("Invitations");

                    b.Navigation("ProgrammingLanguages");
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.InterviewSolution", b =>
                {
                    b.Navigation("TaskSolutions");
                });

            modelBuilder.Entity("Astrum.CodeRev.UserService.Domain.Aggregates.TestTask", b =>
                {
                    b.Navigation("TaskSolutions");
                });
#pragma warning restore 612, 618
        }
    }
}
